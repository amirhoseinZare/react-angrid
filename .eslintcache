[{"D:\\projects\\kingofday\\react-angrid\\src\\index.js":"1","D:\\projects\\kingofday\\react-angrid\\src\\App.js":"2","D:\\projects\\kingofday\\react-angrid\\src\\reportWebVitals.js":"3","D:\\projects\\kingofday\\react-angrid\\src\\component\\AnGrid.js":"4"},{"size":500,"mtime":1610975964000,"results":"5","hashOfConfig":"6"},{"size":2232,"mtime":1611145439529,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1610975964000,"results":"8","hashOfConfig":"6"},{"size":4491,"mtime":1611145688548,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"11qx33t",{"filePath":"12","messages":"13","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\projects\\kingofday\\react-angrid\\src\\index.js",[],"D:\\projects\\kingofday\\react-angrid\\src\\App.js",["18","19","20","21"],"D:\\projects\\kingofday\\react-angrid\\src\\reportWebVitals.js",[],"D:\\projects\\kingofday\\react-angrid\\src\\component\\AnGrid.js",[],{"ruleId":"22","severity":1,"message":"23","line":7,"column":19,"nodeType":"24","messageId":"25","endLine":7,"endColumn":29},{"ruleId":"22","severity":1,"message":"26","line":8,"column":18,"nodeType":"24","messageId":"25","endLine":8,"endColumn":27},{"ruleId":"22","severity":1,"message":"27","line":12,"column":22,"nodeType":"24","messageId":"25","endLine":12,"endColumn":35},{"ruleId":"28","severity":1,"message":"29","line":71,"column":16,"nodeType":"30","endLine":71,"endColumn":21},"no-unused-vars","'setLoading' is assigned a value but never used.","Identifier","unusedVar","'setFilter' is assigned a value but never used.","'setTotalCount' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'active' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","Literal"]